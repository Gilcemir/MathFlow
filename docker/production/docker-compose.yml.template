# Production Docker Compose Template
# This is a template - copy and customize for your production environment

version: '3.8'

services:
  app:
    image: mathflow-app:${VERSION:-latest}  # Use image from registry, not build
    container_name: mathflow-app-${ENVIRONMENT:-prod}
    restart: unless-stopped
    ports:
      - "${APP_PORT:-5124}:5124"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Production}
      # Use external services in production
      - Otlp__Endpoint=${OTLP_ENDPOINT}  # e.g., https://otel-collector.company.com:4317
      - ConnectionStrings__DefaultConnection=${DATABASE_CONNECTION_STRING}  # External managed database
    # Production-specific configurations
    deploy:
      replicas: ${REPLICAS:-2}
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5124/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Production networks (cloud provider specific)
    # networks:
    #   - production-network

# Production typically uses external networks
# networks:
#   production-network:
#     external: true

# Notes for production deployment:
# 1. Use image from container registry (not build)
# 2. Configure external database connection
# 3. Use managed observability services
# 4. Set up proper secrets management
# 5. Configure load balancing
# 6. Set resource limits
# 7. Enable health checks
# 8. Configure logging aggregation
# 9. Set up monitoring and alerts
# 10. Use environment-specific configurations
